package se.yarin.cbhlib;

import lombok.Getter;

public enum EndgameType {
    TODO_00,
    TODO_01, // Invalid?
    TODO_02("P Pawn Endings Baurenendspiele"),
    TODO_03("1..8 P :: K"),
    TODO_04, // Invalid?
    TODO_05("1 P :: 1 P"),
    TODO_06("2 P :: 2 P"),
    TODO_07("3 P :: 3 P"),
    TODO_08("nP :: nP, n>3"),
    TODO_09("2 P :: 1 P"),
    TODO_0A("3 P :: 2 P"),
    TODO_0B("4 P :: 3 P"),
    TODO_0C("5 P :: 4 P"),
    TODO_0D("n P :: n-1 P"),
    TODO_0E("n P :: n-2 P"),
    TODO_0F("n P :: n-3 P"),
    TODO_10("RP Pure Rook Endings Reine Turmendspiele"),
    TODO_11("R :: R (Endgame CD1, Fritz CD)"),
    TODO_12, // Invalid?
    TODO_13("R + 1P (a,g) :: R (Endgame CD1, Fritz CD)"),
    TODO_14("R + 1P (b,g) :: R (Endgame CD1, Fritz CD)"),
    TODO_15("R + 1P (c,f) :: R (Endgame CD1, Fritz CD)"),
    TODO_16("R + 1P (d,e) :: R (Endgame CD1, Fritz CD)"),
    TODO_17("R + 2P :: R"),
    TODO_18("R + nP :: R, n>2"),
    TODO_19("R + 2P :: R + 1P"),
    TODO_1A("R + 3P :: R + 2P"),
    TODO_1B("R + 4P :: R + 3P"),
    TODO_1C("R + nP :: R + (n - 1)P, n>4"),
    TODO_1D("R + nP :: R + (n-2)P, n>2"),
    TODO_1E("R + nP :: R + (n - m)P, n>3, m>2"),
    TODO_1F("R + 1P :: R + 1P"),
    TODO_20("R + 2P :: R + 2P"),
    TODO_21("R + 3P :: R + 3P"),
    TODO_22("R + 4P :: R + 4P"),
    TODO_23("R + nP :: R + nP, n>4"),
    TODO_24("R :: P/N/B Rook vs. Other Pieces"),
    TODO_25("R :: P"),
    TODO_26, // Invalid?
    TODO_27("R :: N"),
    TODO_28("R :: B"),
    TODO_29("R :: NN/NB/BB"),
    TODO_2A("R :: NNN/NNB/NBB/BBB"),
    TODO_2B("RN/RB Rook and Minor Piece"),
    TODO_2C("RN/RB :: P"),
    TODO_2D, // Invalid?
    TODO_2E("RN/RB :: N/B"),
    TODO_2F("RN :: R"),
    TODO_30("RB :: R"),
    TODO_31("RN/RB :: NN/NB/BB"),
    TODO_32("RN :: RN"),
    TODO_33("RB :: RN"),
    TODO_34("RB :: RB!"),
    TODO_35("RB :: RB="),
    TODO_36("RR Two rooks"),
    TODO_37("RR :: P"),
    TODO_38, // Invalid?
    TODO_39("RR :: R"),
    TODO_3A("RR : N/B"),
    TODO_3B("RR :: NN/NB/BB"),
    TODO_3C("RR :: RN"),
    TODO_3D("RR :: RB"),
    TODO_3E("RR :: RR"),
    TODO_3F("QP Pure Queen Endings"),
    TODO_40("Q :: Q (Endgame CD1, Fritz CD)"),
    TODO_41, // Invalid?
    TODO_42("Q + P(ah) :: Q (Endgame CD1, Fritz CD)"),
    TODO_43("Q + P(bg) :: Q (Endgame CD1, Fritz CD)"),
    TODO_44("Q + P(cf) :: Q (Endgame CD1, Fritz CD)"),
    TODO_45("Q + P(de) :: Q (Endgame CD1, Fritz CD)"),
    TODO_46("Q + PP :: Q"),
    TODO_47("Q + P-P :: Q"),
    TODO_48("Q + nP :: Q"),
    TODO_49("Q + 2P :: Q + P"),
    TODO_4A("Q + 3P :: Q + 2P"),
    TODO_4B("Q + nP :: Q + (n-1)P"),
    TODO_4C("Q + nP :: Q + (n - m)P; n>2, m>1"),
    TODO_4D("Q + P :: Q + P"),
    TODO_4E("Q + 2P :: Q + 2P"),
    TODO_4F("Q + nP :: Q + nP"),
    TODO_50("Q :: P/N/B/R Queen vs. Other Pieces"),
    TODO_51("Q :: nP"),
    TODO_52, // Invalid?
    TODO_53("Q :: N"),
    TODO_54("Q :: B"),
    TODO_55("Q :: R"),
    TODO_56("Q :: NN/NB/BB"),
    TODO_57("Q :: RN/RB"),
    TODO_58("Q :: RR"),
    TODO_59("Q :: NNN/NNB/NBB/BBB"),
    TODO_5A("Q :: RNN/RNB/RBB"),
    TODO_5B("Q :: RRN/RRB"),
    TODO_5C("QB/QN/QR Queen and One Piece"),
    TODO_5D("QN/QB :: P"),
    TODO_5E, // Invalid?
    TODO_5F("QN/QB :: N/B"),
    TODO_60("QN/QB :: R"),
    TODO_61("QN :: Q"),
    TODO_62("QN + nP :: Q"),
    TODO_63("QN :: Q + nP"),
    TODO_64("QN + nP :: Q + nP"),
    TODO_65("QB :: Q"),
    TODO_66("QB + nP :: Q"),
    TODO_67("QB :: Q + nP"),
    TODO_68("QB + nP :: Q + nP"),
    TODO_69("QN/QB :: NN/NB/BB"),
    TODO_6A("QN/QB :: RN/RB"),
    TODO_6B("QN/QB :: RR"),
    TODO_6C("QN :: QN"),
    TODO_6D("QB :: QN"),
    TODO_6E("QB :: QB (!)"),
    TODO_6F("QB :: QB (=)"),
    TODO_70("QR :: Q"),
    TODO_71("QR :: QN"),
    TODO_72("QR :: QB"),
    TODO_73("N/B One Minor Piece"),
    TODO_74("N :: K"),
    TODO_75, // Invalid?
    TODO_76("N :: P"),
    TODO_77("B :: K"),
    TODO_78("B :: P"),
    TODO_79("N :: N"),
    TODO_7A("B + nP :: N"),
    TODO_7B("B :: N + nP"),
    TODO_7C("B + nP :: N + (n + m)P; n>0, m>0"),
    TODO_7D("B + (n + m)P :: N + nP"),
    TODO_7E("B + nP : N + nP"),
    TODO_7F("B :: B!"),
    TODO_80("B :: B="),
    TODO_81("NN/NB/BB Two Minor Pieces"),
    TODO_82("NN/BN/BB : K"),
    TODO_83, // Invalid?
    TODO_84("NN/BN/BB :: P"),
    TODO_85("NN/BN/BB :: N/B"),
    TODO_86("NN :: NN"),
    TODO_87("NB :: NN"),
    TODO_88("NB :: NB"),
    TODO_89("BB :: NN"),
    TODO_8A("BB :: NB"),
    TODO_8B("BB :: BB");

    @Getter
    private String description;

    EndgameType(String description) {
        this.description = description;
    }

    EndgameType() {
        this.description = "?";
    }
}
